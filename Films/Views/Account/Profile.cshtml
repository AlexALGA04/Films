@using Films.Models.APIModels
@model Films.Models.ViewModels.UserProfileViewModel

@{
    <link rel="stylesheet" href="~/css/profileDashboard.css" />
    var sweetAlertMessage = TempData["SweetAlertMessage"] as string;
}

<div class="profile-wrapper container mt-5 d-flex flex-wrap justify-content-evenly">
    <!-- LEFT SECTION -->
    <aside class="profile-sidebar column justify-content-center mb-5 text-center">
        <div class="col-12 col-md-12">
            <div class="profile-picture">
                <img src="@Model.User.Image" alt="Foto de perfil" class="rounded-circle img-fluid mb-3" />
                <h2>@Model.User.Username</h2>
            </div>
        </div>

        <!-- LISTS SECTION-->
        <div class="list-section col-12 col-md-12 mt-4">
            <h3 style=" color: #F4C430;" class="section-title">Mis Listas</h3>
            @if (Model.TypeLists != null)
            {
                foreach (var type in Model.TypeLists)
                {
                    // search typelist 
                    var listsOfType = Model.User.Lists?.Where(l => l.FkIdTypeList == type.IdListType);

                    string iconClass = type.IdListType switch
                    {
                        1 => "fa-hourglass-half",
                        2 => "fa-check",
                        3 => "fa-heart",
                        4 => "fa-trash-can",
                        _ => "fa-list"
                    };

                    <div class="list-item">
                        <a asp-controller="Movies" asp-action="ViewList" asp-route-id="@type.IdListType">
                            <i class="fa-solid @iconClass"></i> @type.ListName
                        </a>
                        @if (listsOfType != null && listsOfType.Any())
                        {
                            <span class="badge bg-success ms-2">@listsOfType.Count() películas</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary ms-2">Sin contenido</span>
                        }
                    </div>
                }
            }
            else
            {
                <p>No tienes listas disponibles.</p>
            }
        </div>
    </aside>

    <!-- RIGHT SECTION -->
    <main class="profile-main">
        <!-- FRIENDS -->
        <div class="friends-header">
            <a asp-controller="Account" asp-action="Friends" class="friends-link text-decoration-none">
                <h3  style="color: #F4C430"> @Model.User.FriendFkIdFriendNavigations.Count() Amigos</h3> 
            </a>
        </div>

        <!-- ABOUT ME -->
        <div class="about-me mt-5">
            <h3 style=" color: #F4C430;">Sobre mí</h3>
            <p>@Model.User.AboutMe</p>
        </div>

        <!-- COMMENTS -->
        <div class="comments-section mt-5">
            <h3 style=" color: #F4C430;">Mis Comentarios</h3>
            @if (Model.User.Reviews != null && Model.User.Reviews.Any())
            {
                foreach (var review in Model.User.Reviews)
                {
                    <div class="comment-item">
                        <h4>@review.Title</h4>
                        <div class="rating">
                            @for (int i = 0; i < review.Rating; i++)
                            {
                                <span>&#9733;</span>
                            }
                        </div>
                        <p>@review.Description</p>
                    </div>
                }
            }
            else
            {
                <p>No has hecho ningún comentario.</p>
            }
        </div>
    </main>
</div>

<!-- Incluye la librería SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- Verifica si hay un mensaje en TempData y lo muestra -->
@if (!string.IsNullOrEmpty(sweetAlertMessage))
{
    <script>
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: '@sweetAlertMessage'
        });
    </script>
}



