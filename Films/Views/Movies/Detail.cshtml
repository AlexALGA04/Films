@using Films.Models.ViewModels
@model Films.Models.ViewModels.MovieDetailsViewModel

@section Styles {
    <link rel="stylesheet" href="~/css/MovieDetail.css?v=@DateTime.Now.Ticks" />
}


@{
    // Lista de personas que viene de ViewModel
    var persons = Model.Persons;
    // Filtrar por los actores
    var actors = persons
        .Where(p => p.Department == "Acting")
        .Take(4)
        .ToList();

    var currentList = Model.UserMovieLists
        .FirstOrDefault(l => l.FkIdMovie == Model.Id);

    int type = 0;

    if(currentList != null)
        type = currentList.FkIdTypeList; // 1. pendiente, 2. completada, 3. favorita, 4. abandonada

    string scoreClass = "low";
    if (Model.Review >= 9)
    {
        scoreClass = "excellent";
    }
    else if (Model.Review >= 7)
    {
        scoreClass = "good";
    }
    else if (Model.Review >= 5)
    {
        scoreClass = "average";
    }


}

<div class="movie-detail-container">
    <!--Modal de listas-->
    <div class="modal fade" id="movieModal" tabindex="-1" aria-labelledby="movieModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content bg-dark text-white">
                <div class="modal-header">
                    <h5 class="modal-title" id="movieModalLabel">Mover a una lista</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <form method="post" action="/Home/AddToList">
                        <button type="submit" class="listButton btn bg-custom-button w-100 mb-3" name="listType" value="Pendiente">
                            <i class="fa-regular fa-hourglass-half"></i> Pendiente
                        </button>
                        <input type="hidden" name="idFilm" class="idFilm" value="@Model.Id" />
                        <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                    </form>

                    <form method="post" action="/Home/AddToList">
                        <button type="submit" class="listButton btn bg-custom-button w-100 mb-3" name="listType" value="Completada">
                            <i class="fa-solid fa-check"></i> Completada
                        </button>
                        <input type="hidden" name="idFilm" class="idFilm" value="@Model.Id" />
                        <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                    </form>

                    <form method="post" action="/Home/AddToList">
                        <button type="submit" class="listButton btn bg-custom-button w-100 mb-3" name="listType" value="Favorita">
                            <i class="fa-solid fa-heart"></i> Favorita
                        </button>
                        <input type="hidden" name="idFilm" class="idFilm" value="@Model.Id" />
                        <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                    </form>

                    <form method="post" action="/Home/AddToList">
                        <button type="submit" class="listButton btn bg-custom-button w-100 mb-3" name="listType" value="Abandonada">
                            <i class="fa-regular fa-trash-can"></i> Abandonada
                        </button>
                        <input type="hidden" name="idFilm" class="idFilm" value="@Model.Id" />
                        <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="movie-detail-banner" style="background-image: url('https://image.tmdb.org/t/p/original/@Model.BackdropPath');">
        <div class="banner-overlay">
            <div class="banner-content container">
                <img class="poster" src="https://image.tmdb.org/t/p/w500/@Model.PosterPath" alt="@Model.Title" />
                <div class="info">
                    <h1>@Model.Title  (@Model.Id)</h1>
                    <div class="score @scoreClass">
                        <span class="score-value">@Model.Review</span>
                        <span class="score-label">Nota de los usuarios</span>
                    </div>
                    <div class="genres">
                        @foreach (var genre in Model.Genres)
                        {
                            <span class="genre-badge">@genre.Name</span>
                        }
                    </div>
                    <div class="movie-actions">
                        <div class="action-wrapper">
                            <form method="post" action="/Home/AddToList">
                                <button type="submit" class="action-btn @(type == 1 ? "active" : "")" name="listType" value="Pendiente">
                                    <i class="fa-regular fa-hourglass-half"></i>
                                </button>
                                <input type="hidden" name="idFilm" class="idFilm" value="@Model.Id" />
                                <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                                <span class="tooltip">Pendiente</span>
                            </form>
                        </div>
                        <div class="action-wrapper">
                            <form method="post" action="/Home/AddToList">
                                <button type="submit" class="action-btn @(type == 2 ? "active" : "")" name="listType" value="Completada">
                                    <i class="fa-solid fa-check"></i>
                                </button>
                                <input type="hidden" name="idFilm" class="idFilm" value="@Model.Id" />
                                <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                                <span class="tooltip">Completada</span>

                            </form>
                        </div>
                        <div class="action-wrapper">
                            <form method="post" action="/Home/AddToList">
                                <button class="action-btn @(type == 3 ? "active" : "")" type="submit" name="listType" value="Favorita">
                                    <i class="fa-solid fa-heart"></i>
                                </button>
                                <input type="hidden" name="idFilm" class="idFilm" value="@Model.Id" />
                                <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                                <span class="tooltip">Favorita</span>
                            </form>
                        </div>
                        <div class="action-wrapper">
                            <form method="post" action="/Home/AddToList">
                                <button class="action-btn @(type == 4 ? "active" : "")" type="submit" name="listType" value="Abandonada">
                                    <i class="fa-regular fa-trash-can"></i>
                                </button>
                                <span class="tooltip">Abandonada</span>
                                <input type="hidden" name="idFilm" class="idFilm" value="@Model.Id" />
                                <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                            </form>
                        </div>
                    </div>



                </div>
            </div>
        </div>
    </div>

    <div class="container movie-detail-body">
        <div class="movie-detail-sinopsis">
            <p class="sinopsis"><strong>Sinopsis</strong></p>
            <p>@Model.Overview</p>
        </div>

        <div class="movie-detail-actors">
            <p> <strong>Actores destacados</strong> </p>
            <div class="actor-pics">
                @foreach (var actor in actors)
                {
                    <div class="actor-item">
                        <img src="https://image.tmdb.org/t/p/w185/@actor.ProfilePath" alt="@actor.Name" />
                        <span>@actor.Name</span>
                    </div>
                }
            </div>
            
        </div>
    </div>

    @if (Model.RelatedMovies?.Any() == true)
    {
        <div class="container related-movies">
            <h4>Películas relacionadas</h4>
            <div class="movie-scroll-container">
                @foreach (var movie in Model.RelatedMovies)
                {
					var movieList = Model.UserMovieLists
					.FirstOrDefault(l => l.FkIdMovie == movie.Id);
                    string listSymbol = "";
                    if (movieList != null)
                    {
                        switch (movieList.FkIdTypeList)
                        {
                            case 1: listSymbol = "fa-hourglass-half"; break;
                            case 2: listSymbol = "fa-check"; break;
                            case 3: listSymbol = "fa-heart"; break;
                            case 4: listSymbol = "fa-trash-can"; break;
                        }
                    }

                    <div class="movie-container" style="position: relative;">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <button id="@movie.Id"
                                    class="movieBtn"
                                    data-bs-toggle="modal"
                                    data-bs-target="#movieModal"
                                    data-id="@movie.Id"
                                    data-list-type="@movieList?.FkIdTypeList">
                                @if (string.IsNullOrEmpty(listSymbol))
                                {
                                    <i class="fa-solid fa-plus fa-sm"></i>
                                }
                                else
                                {
                                    <i class="fa-solid @listSymbol fa-sm"></i>
                                }
                            </button>
                        }

                        <a href="/movie/@movie.Id/detail" class="text-decoration-none">
                            <div class="movie-card">
                                <div class="movieImg" style="background-image: url('https://image.tmdb.org/t/p/w500/@movie.PosterPath');">
                                </div>
                                <p class="text-white">
                                    @(movie.Title.Length > 30 ? movie.Title.Substring(0, 30) + "..." : movie.Title)
                                </p>
                                <p class="text-white">★ @movie.Review.ToString("0.0") | @(DateTime.Parse(movie.ReleaseDate).Year)</p>
                            </div>
                        </a>
                    </div>
                }
            </div>
            


        </div>
    }

    @if (Model.Reviews.Any())
    {
        <div class="container mt-5">
            <h4 class="text-white mb-4">Comentarios de los usuarios</h4>

            @foreach (var review in Model.Reviews)
            {
                var estado = Model.UserMovieLists
                .FirstOrDefault(l => l.FkIdMovie == review.FkIdMovie && l.FkIdUser == review.FkIdUser);
                string estadoTexto = estado?.FkIdTypeList switch
                {
                    1 => "Pendiente",
                    2 => "Completada",
                    3 => "Favorita",
                    4 => "Abandonada",
                    _ => "Sin estado"
                };
                    

                <div class="review-item d-flex gap-3 p-3 mb-4 rounded">
                    <!-- Foto del usuario -->
                    <div class="user-photo rounded-circle d-flex justify-content-center align-items-center">
                        <span>Foto</span>
                    </div>

                    <!-- Contenido del comentario -->
                    <div class="flex-grow-1">
                        <!-- Cabecera: estrellas y estado -->
                        <div class="d-flex align-items-center justify-content-between mb-2">
                            <div class="stars">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= review.Rating)
                                    {
                                        <i class="fa-solid fa-star text-warning"></i>
                                    }
                                    else
                                    {
                                        <i class="fa-regular fa-star text-secondary"></i>
                                    }
                                }
                            </div>
                            <div class="user-state text-muted">
                                <i class="fa-regular fa-gem me-1"></i> @estadoTexto
                            </div>
                        </div>

                        <h6 class="fw-bold">@review.Title.ToUpper()</h6>
                        <p class="mb-0">@review.Description</p>
                    </div>
                </div>

            }
        </div>
    }
    else
    {
        <div class="container mt-5">
            <h5 class="text-muted">Esta película todavía no tiene comentarios.</h5>
        </div>
    }

</div>

@section Scripts {
    <script src="~/js/home.js?v=@DateTime.Now.Ticks"></script>
}
