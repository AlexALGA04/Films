@using Films.Models.ViewModels
@model Films.Models.ViewModels.MovieDetailsViewModel

@section Styles {
    <link rel="stylesheet" href="~/css/MovieDetail.css?v=@DateTime.Now.Ticks" />
}

@{
    // Lista de personas que viene de ViewModel
    var persons = Model.Persons;
    // Filtrar por los actores
    var actors = persons
        .Where(p => p.Department == "Acting")
        .ToList();

    // Filtrar por los directores
    var directors = persons
    .Where(p => p.Department == "Director")
    .ToList();

    var currentList = Model.UserMovieLists
        .FirstOrDefault(l => l.FkIdMovie == Model.Id);
    int type = 0;
    if(currentList != null)
        type = currentList.FkIdTypeList; // 1. pendiente, 2. completada, 3. favorita, 4. abandonada

    string scoreClass = "low";
    if (Model.Review >= 9)
    {
        scoreClass = "excellent";
    }
    else if (Model.Review >= 7)
    {
        scoreClass = "good";
    }
    else if (Model.Review >= 5)
    {
        scoreClass = "average";
    }
}

<div class="movie-detail-container">
    <div class="movie-detail-banner" style="background-image: url('https://image.tmdb.org/t/p/original/@Model.BackdropPath');">
        <div class="banner-overlay">
            <div class="banner-content container">
                <img class="poster" src="https://image.tmdb.org/t/p/w500/@Model.PosterPath" alt="@Model.Title" />
                <div class="info">
                    <h1>@Model.Title</h1>
                    <div class="score @scoreClass">
                        <span class="score-value">@Model.Review</span>
                        <span class="score-label">Nota de los usuarios</span>
                    </div>
                    <div class="genres">
                        @foreach (var genre in Model.Genres)
                        {
                            <span class="genre-badge">@genre.Name</span>
                        }
                    </div>
                    <div class="movie-actions">
                        <div class="action-wrapper">
                            <form method="post" action="/Home/AddToList">
                                <button type="submit" class="action-btn @(type == 1 ? "active" : "")" name="listType" value="Pendiente">
                                    <i class="fa-regular fa-hourglass-half"></i>
                                </button>
                                <input type="hidden" name="idFilm" class="idFilm" value="@Model.Id" />
                                <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                                <span class="tooltip">Pendiente</span>
                            </form>
                        </div>
                        <div class="action-wrapper">
                            <form method="post" action="/Home/AddToList">
                                <button type="submit" class="action-btn @(type == 2 ? "active" : "")" name="listType" value="Completada">
                                    <i class="fa-solid fa-check"></i>
                                </button>
                                <input type="hidden" name="idFilm" class="idFilm" value="@Model.Id" />
                                <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                                <span class="tooltip">Completada</span>

                            </form>
                        </div>
                        <div class="action-wrapper">
                            <form method="post" action="/Home/AddToList">
                                <button class="action-btn @(type == 3 ? "active" : "")" type="submit" name="listType" value="Favorita">
                                    <i class="fa-solid fa-heart"></i>
                                </button>
                                <input type="hidden" name="idFilm" class="idFilm" value="@Model.Id" />
                                <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                                <span class="tooltip">Favorita</span>
                            </form>
                        </div>
                        <div class="action-wrapper">
                            <form method="post" action="/Home/AddToList">
                                <button class="action-btn @(type == 4 ? "active" : "")" type="submit" name="listType" value="Abandonada">
                                    <i class="fa-regular fa-trash-can"></i>
                                </button>
                                <span class="tooltip">Abandonada</span>
                                <input type="hidden" name="idFilm" class="idFilm" value="@Model.Id" />
                                <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                            </form>
                        </div>
                    </div>



                </div>
            </div>
        </div>
    </div>

    <div class="container movie-detail-body">
        <p class="sinopsis"><strong>Sinopsis</strong></p>
        <p>@Model.Overview</p>
        <p>Actores destacados</p>
        @{
            foreach(var actor in actors)
            {
                <p>@(actor.Name)</p>
            }
        }
    </div>

    @if (Model.RelatedMovies?.Any() == true)
    {
        <div class="container related-movies">
            <h4>Películas relacionadas</h4>
            <div class="movie-scroll-container">
                @foreach (var movie in Model.RelatedMovies)
                {
					var movieList = Model.UserMovieLists
					.FirstOrDefault(l => l.FkIdMovie == movie.Id);
                    string listSymbol = "";
                    if (movieList != null)
                    {
                        switch (movieList.FkIdTypeList)
                        {
                            case 1: listSymbol = "fa-hourglass-half"; break;
                            case 2: listSymbol = "fa-check"; break;
                            case 3: listSymbol = "fa-heart"; break;
                            case 4: listSymbol = "fa-trash-can"; break;
                        }
                    }

                    <div class="movie-container" style="position: relative;">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <button id="@movie.Id"
                                    class="movieBtn"
                                    data-bs-toggle="modal"
                                    data-bs-target="#movieModal"
                                    data-id="@movie.Id"
                                    data-list-type="@movieList?.FkIdTypeList">
                                @if (string.IsNullOrEmpty(listSymbol))
                                {
                                    <i class="fa-solid fa-plus fa-sm"></i>
                                }
                                else
                                {
                                    <i class="fa-solid @listSymbol fa-sm"></i>
                                }
                            </button>
                        }

                        <a href="/movie/@movie.Id/detail" class="text-decoration-none">
                            <div class="movie-card">
                                <div class="movieImg" style="background-image: url('https://image.tmdb.org/t/p/w500/@movie.PosterPath');">
                                </div>
                                <p class="text-white">
                                    @(movie.Title.Length > 30 ? movie.Title.Substring(0, 30) + "..." : movie.Title)
                                </p>
                                <p class="text-white">★ @movie.Review.ToString("0.0") | @(DateTime.Parse(movie.ReleaseDate).Year)</p>
                            </div>
                        </a>
                    </div>
                }
            </div>
            


        </div>
    }
</div>

